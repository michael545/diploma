Frequency '5M' stored as '5ME'
Beginning AutoGluon training... Time limit = 600s
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.02 GB / 63.10 GB (57.1%)
Disk Space Avail:   122.62 GB / 465.02 GB (26.4%)
===================================================
Setting presets to: medium_quality

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5ME',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

Provided train_data has 1 rows, 1 time series. Median time series length is 1 (min=1, max=1). 
	Removing 1 short time series from train_data. Only series with length >= 41 will be used for training.
	After filtering, train_data has 0 rows, 0 time series. Median time series length is nan (min=nan, max=nan). 
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Frequency '5M' stored as '5ME'
Frequency '5M' stored as '5ME'
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.96 GB / 63.10 GB (58.6%)
Disk Space Avail:   122.58 GB / 465.02 GB (26.4%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.96 GB / 63.10 GB (58.6%)
Disk Space Avail:   122.58 GB / 465.02 GB (26.4%)
===================================================
Setting presets to: medium_quality
Setting presets to: medium_quality

Fitting with arguments:

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5ME',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5ME',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

train_data with frequency 'IRREG' has been resampled to frequency '5ME'.
train_data with frequency 'IRREG' has been resampled to frequency '5ME'.
Provided train_data has 2 rows, 1 time series. Median time series length is 2 (min=2, max=2). 
Provided train_data has 2 rows, 1 time series. Median time series length is 2 (min=2, max=2). 
	Removing 1 short time series from train_data. Only series with length >= 41 will be used for training.
	Removing 1 short time series from train_data. Only series with length >= 41 will be used for training.
	After filtering, train_data has 0 rows, 0 time series. Median time series length is nan (min=nan, max=nan). 
	After filtering, train_data has 0 rows, 0 time series. Median time series length is nan (min=nan, max=nan). 
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.97 GB / 63.10 GB (58.6%)
Disk Space Avail:   122.58 GB / 465.02 GB (26.4%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.97 GB / 63.10 GB (58.6%)
Disk Space Avail:   122.58 GB / 465.02 GB (26.4%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.97 GB / 63.10 GB (58.6%)
Disk Space Avail:   122.58 GB / 465.02 GB (26.4%)
===================================================
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Beginning AutoGluon training... Time limit = 6000s
Beginning AutoGluon training... Time limit = 6000s
Beginning AutoGluon training... Time limit = 6000s
Beginning AutoGluon training... Time limit = 6000s
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.34 GB / 63.10 GB (57.6%)
Disk Space Avail:   129.13 GB / 465.02 GB (27.8%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.34 GB / 63.10 GB (57.6%)
Disk Space Avail:   129.13 GB / 465.02 GB (27.8%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.34 GB / 63.10 GB (57.6%)
Disk Space Avail:   129.13 GB / 465.02 GB (27.8%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.34 GB / 63.10 GB (57.6%)
Disk Space Avail:   129.13 GB / 465.02 GB (27.8%)
===================================================
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6000,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6000,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6000,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6000,
 'verbosity': 2}

Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Beginning AutoGluon training... Time limit = 6000s
Beginning AutoGluon training... Time limit = 6000s
Beginning AutoGluon training... Time limit = 6000s
Beginning AutoGluon training... Time limit = 6000s
Beginning AutoGluon training... Time limit = 6000s
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       35.74 GB / 63.10 GB (56.6%)
Disk Space Avail:   129.10 GB / 465.02 GB (27.8%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       35.74 GB / 63.10 GB (56.6%)
Disk Space Avail:   129.10 GB / 465.02 GB (27.8%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       35.74 GB / 63.10 GB (56.6%)
Disk Space Avail:   129.10 GB / 465.02 GB (27.8%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       35.74 GB / 63.10 GB (56.6%)
Disk Space Avail:   129.10 GB / 465.02 GB (27.8%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       35.74 GB / 63.10 GB (56.6%)
Disk Space Avail:   129.10 GB / 465.02 GB (27.8%)
===================================================
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6000,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6000,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6000,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6000,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6000,
 'verbosity': 2}

Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Beginning AutoGluon training... Time limit = 6000s
Beginning AutoGluon training... Time limit = 6000s
Beginning AutoGluon training... Time limit = 6000s
Beginning AutoGluon training... Time limit = 6000s
Beginning AutoGluon training... Time limit = 6000s
Beginning AutoGluon training... Time limit = 6000s
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       35.92 GB / 63.10 GB (56.9%)
Disk Space Avail:   129.14 GB / 465.02 GB (27.8%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       35.92 GB / 63.10 GB (56.9%)
Disk Space Avail:   129.14 GB / 465.02 GB (27.8%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       35.92 GB / 63.10 GB (56.9%)
Disk Space Avail:   129.14 GB / 465.02 GB (27.8%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       35.92 GB / 63.10 GB (56.9%)
Disk Space Avail:   129.14 GB / 465.02 GB (27.8%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       35.92 GB / 63.10 GB (56.9%)
Disk Space Avail:   129.14 GB / 465.02 GB (27.8%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       35.92 GB / 63.10 GB (56.9%)
Disk Space Avail:   129.14 GB / 465.02 GB (27.8%)
===================================================
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-t5-small'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6000,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-t5-small'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6000,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-t5-small'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6000,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-t5-small'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6000,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-t5-small'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6000,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-t5-small'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6000,
 'verbosity': 2}

Inferred time series frequency: '5min'
Inferred time series frequency: '5min'
Inferred time series frequency: '5min'
Inferred time series frequency: '5min'
Inferred time series frequency: '5min'
Inferred time series frequency: '5min'
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================

Starting training. Start time is 2025-07-01 22:35:49

Starting training. Start time is 2025-07-01 22:35:49

Starting training. Start time is 2025-07-01 22:35:49

Starting training. Start time is 2025-07-01 22:35:49

Starting training. Start time is 2025-07-01 22:35:49

Starting training. Start time is 2025-07-01 22:35:49
Models that will be trained: ['Chronos[amazon__chronos-t5-small]']
Models that will be trained: ['Chronos[amazon__chronos-t5-small]']
Models that will be trained: ['Chronos[amazon__chronos-t5-small]']
Models that will be trained: ['Chronos[amazon__chronos-t5-small]']
Models that will be trained: ['Chronos[amazon__chronos-t5-small]']
Models that will be trained: ['Chronos[amazon__chronos-t5-small]']
Training timeseries model Chronos[amazon__chronos-t5-small]. Training for up to 6000.0s of the 6000.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-t5-small]. Training for up to 6000.0s of the 6000.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-t5-small]. Training for up to 6000.0s of the 6000.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-t5-small]. Training for up to 6000.0s of the 6000.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-t5-small]. Training for up to 6000.0s of the 6000.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-t5-small]. Training for up to 6000.0s of the 6000.0s of remaining time.
	Warning: Exception caused Chronos[amazon__chronos-t5-small] to fail during training... Skipping this model.
	Warning: Exception caused Chronos[amazon__chronos-t5-small] to fail during training... Skipping this model.
	Warning: Exception caused Chronos[amazon__chronos-t5-small] to fail during training... Skipping this model.
	Warning: Exception caused Chronos[amazon__chronos-t5-small] to fail during training... Skipping this model.
	Warning: Exception caused Chronos[amazon__chronos-t5-small] to fail during training... Skipping this model.
	Warning: Exception caused Chronos[amazon__chronos-t5-small] to fail during training... Skipping this model.
	Chronos[amazon__chronos-t5-small]\W0 requires a GPU to run, but no GPU was detected. Please make sure that you are using a computer with a CUDA-compatible GPU and `import torch; torch.cuda.is_available()` returns `True`.
	Chronos[amazon__chronos-t5-small]\W0 requires a GPU to run, but no GPU was detected. Please make sure that you are using a computer with a CUDA-compatible GPU and `import torch; torch.cuda.is_available()` returns `True`.
	Chronos[amazon__chronos-t5-small]\W0 requires a GPU to run, but no GPU was detected. Please make sure that you are using a computer with a CUDA-compatible GPU and `import torch; torch.cuda.is_available()` returns `True`.
	Chronos[amazon__chronos-t5-small]\W0 requires a GPU to run, but no GPU was detected. Please make sure that you are using a computer with a CUDA-compatible GPU and `import torch; torch.cuda.is_available()` returns `True`.
	Chronos[amazon__chronos-t5-small]\W0 requires a GPU to run, but no GPU was detected. Please make sure that you are using a computer with a CUDA-compatible GPU and `import torch; torch.cuda.is_available()` returns `True`.
	Chronos[amazon__chronos-t5-small]\W0 requires a GPU to run, but no GPU was detected. Please make sure that you are using a computer with a CUDA-compatible GPU and `import torch; torch.cuda.is_available()` returns `True`.
Not fitting ensemble as no models were successfully trained.
Not fitting ensemble as no models were successfully trained.
Not fitting ensemble as no models were successfully trained.
Not fitting ensemble as no models were successfully trained.
Not fitting ensemble as no models were successfully trained.
Not fitting ensemble as no models were successfully trained.
Training complete. Models trained: []
Training complete. Models trained: []
Training complete. Models trained: []
Training complete. Models trained: []
Training complete. Models trained: []
Training complete. Models trained: []
Total runtime: 4.78 s
Total runtime: 4.78 s
Total runtime: 4.78 s
Total runtime: 4.78 s
Total runtime: 4.78 s
Total runtime: 4.78 s
Trainer has no fit models that can predict.
Trainer has no fit models that can predict.
Trainer has no fit models that can predict.
Trainer has no fit models that can predict.
Trainer has no fit models that can predict.
Trainer has no fit models that can predict.
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Beginning AutoGluon training... Time limit = 6000s
Beginning AutoGluon training... Time limit = 6000s
Beginning AutoGluon training... Time limit = 6000s
Beginning AutoGluon training... Time limit = 6000s
Beginning AutoGluon training... Time limit = 6000s
Beginning AutoGluon training... Time limit = 6000s
Beginning AutoGluon training... Time limit = 6000s
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.08 GB / 63.10 GB (57.2%)
Disk Space Avail:   129.14 GB / 465.02 GB (27.8%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.08 GB / 63.10 GB (57.2%)
Disk Space Avail:   129.14 GB / 465.02 GB (27.8%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.08 GB / 63.10 GB (57.2%)
Disk Space Avail:   129.14 GB / 465.02 GB (27.8%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.08 GB / 63.10 GB (57.2%)
Disk Space Avail:   129.14 GB / 465.02 GB (27.8%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.08 GB / 63.10 GB (57.2%)
Disk Space Avail:   129.14 GB / 465.02 GB (27.8%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.08 GB / 63.10 GB (57.2%)
Disk Space Avail:   129.14 GB / 465.02 GB (27.8%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.08 GB / 63.10 GB (57.2%)
Disk Space Avail:   129.14 GB / 465.02 GB (27.8%)
===================================================
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-t5-small'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6000,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-t5-small'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6000,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-t5-small'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6000,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-t5-small'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6000,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-t5-small'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6000,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-t5-small'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6000,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-t5-small'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6000,
 'verbosity': 2}

Inferred time series frequency: '5min'
Inferred time series frequency: '5min'
Inferred time series frequency: '5min'
Inferred time series frequency: '5min'
Inferred time series frequency: '5min'
Inferred time series frequency: '5min'
Inferred time series frequency: '5min'
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================

Starting training. Start time is 2025-07-01 22:48:58

Starting training. Start time is 2025-07-01 22:48:58

Starting training. Start time is 2025-07-01 22:48:58

Starting training. Start time is 2025-07-01 22:48:58

Starting training. Start time is 2025-07-01 22:48:58

Starting training. Start time is 2025-07-01 22:48:58

Starting training. Start time is 2025-07-01 22:48:58
Models that will be trained: ['Chronos[amazon__chronos-t5-small]']
Models that will be trained: ['Chronos[amazon__chronos-t5-small]']
Models that will be trained: ['Chronos[amazon__chronos-t5-small]']
Models that will be trained: ['Chronos[amazon__chronos-t5-small]']
Models that will be trained: ['Chronos[amazon__chronos-t5-small]']
Models that will be trained: ['Chronos[amazon__chronos-t5-small]']
Models that will be trained: ['Chronos[amazon__chronos-t5-small]']
Training timeseries model Chronos[amazon__chronos-t5-small]. Training for up to 6000.0s of the 6000.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-t5-small]. Training for up to 6000.0s of the 6000.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-t5-small]. Training for up to 6000.0s of the 6000.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-t5-small]. Training for up to 6000.0s of the 6000.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-t5-small]. Training for up to 6000.0s of the 6000.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-t5-small]. Training for up to 6000.0s of the 6000.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-t5-small]. Training for up to 6000.0s of the 6000.0s of remaining time.
	Warning: Exception caused Chronos[amazon__chronos-t5-small] to fail during training... Skipping this model.
	Warning: Exception caused Chronos[amazon__chronos-t5-small] to fail during training... Skipping this model.
	Warning: Exception caused Chronos[amazon__chronos-t5-small] to fail during training... Skipping this model.
	Warning: Exception caused Chronos[amazon__chronos-t5-small] to fail during training... Skipping this model.
	Warning: Exception caused Chronos[amazon__chronos-t5-small] to fail during training... Skipping this model.
	Warning: Exception caused Chronos[amazon__chronos-t5-small] to fail during training... Skipping this model.
	Warning: Exception caused Chronos[amazon__chronos-t5-small] to fail during training... Skipping this model.
	Chronos[amazon__chronos-t5-small]\W0 requires a GPU to run, but no GPU was detected. Please make sure that you are using a computer with a CUDA-compatible GPU and `import torch; torch.cuda.is_available()` returns `True`.
	Chronos[amazon__chronos-t5-small]\W0 requires a GPU to run, but no GPU was detected. Please make sure that you are using a computer with a CUDA-compatible GPU and `import torch; torch.cuda.is_available()` returns `True`.
	Chronos[amazon__chronos-t5-small]\W0 requires a GPU to run, but no GPU was detected. Please make sure that you are using a computer with a CUDA-compatible GPU and `import torch; torch.cuda.is_available()` returns `True`.
	Chronos[amazon__chronos-t5-small]\W0 requires a GPU to run, but no GPU was detected. Please make sure that you are using a computer with a CUDA-compatible GPU and `import torch; torch.cuda.is_available()` returns `True`.
	Chronos[amazon__chronos-t5-small]\W0 requires a GPU to run, but no GPU was detected. Please make sure that you are using a computer with a CUDA-compatible GPU and `import torch; torch.cuda.is_available()` returns `True`.
	Chronos[amazon__chronos-t5-small]\W0 requires a GPU to run, but no GPU was detected. Please make sure that you are using a computer with a CUDA-compatible GPU and `import torch; torch.cuda.is_available()` returns `True`.
	Chronos[amazon__chronos-t5-small]\W0 requires a GPU to run, but no GPU was detected. Please make sure that you are using a computer with a CUDA-compatible GPU and `import torch; torch.cuda.is_available()` returns `True`.
Not fitting ensemble as no models were successfully trained.
Not fitting ensemble as no models were successfully trained.
Not fitting ensemble as no models were successfully trained.
Not fitting ensemble as no models were successfully trained.
Not fitting ensemble as no models were successfully trained.
Not fitting ensemble as no models were successfully trained.
Not fitting ensemble as no models were successfully trained.
Training complete. Models trained: []
Training complete. Models trained: []
Training complete. Models trained: []
Training complete. Models trained: []
Training complete. Models trained: []
Training complete. Models trained: []
Training complete. Models trained: []
Total runtime: 0.02 s
Total runtime: 0.02 s
Total runtime: 0.02 s
Total runtime: 0.02 s
Total runtime: 0.02 s
Total runtime: 0.02 s
Total runtime: 0.02 s
Trainer has no fit models that can predict.
Trainer has no fit models that can predict.
Trainer has no fit models that can predict.
Trainer has no fit models that can predict.
Trainer has no fit models that can predict.
Trainer has no fit models that can predict.
Trainer has no fit models that can predict.
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Beginning AutoGluon training... Time limit = 6000s
Beginning AutoGluon training... Time limit = 6000s
Beginning AutoGluon training... Time limit = 6000s
Beginning AutoGluon training... Time limit = 6000s
Beginning AutoGluon training... Time limit = 6000s
Beginning AutoGluon training... Time limit = 6000s
Beginning AutoGluon training... Time limit = 6000s
Beginning AutoGluon training... Time limit = 6000s
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.05 GB / 63.10 GB (57.1%)
Disk Space Avail:   129.14 GB / 465.02 GB (27.8%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.05 GB / 63.10 GB (57.1%)
Disk Space Avail:   129.14 GB / 465.02 GB (27.8%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.05 GB / 63.10 GB (57.1%)
Disk Space Avail:   129.14 GB / 465.02 GB (27.8%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.05 GB / 63.10 GB (57.1%)
Disk Space Avail:   129.14 GB / 465.02 GB (27.8%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.05 GB / 63.10 GB (57.1%)
Disk Space Avail:   129.14 GB / 465.02 GB (27.8%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.05 GB / 63.10 GB (57.1%)
Disk Space Avail:   129.14 GB / 465.02 GB (27.8%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.05 GB / 63.10 GB (57.1%)
Disk Space Avail:   129.14 GB / 465.02 GB (27.8%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.05 GB / 63.10 GB (57.1%)
Disk Space Avail:   129.14 GB / 465.02 GB (27.8%)
===================================================
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-t5-small'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6000,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-t5-small'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6000,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-t5-small'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6000,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-t5-small'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6000,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-t5-small'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6000,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-t5-small'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6000,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-t5-small'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6000,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-t5-small'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6000,
 'verbosity': 2}

Inferred time series frequency: '5min'
Inferred time series frequency: '5min'
Inferred time series frequency: '5min'
Inferred time series frequency: '5min'
Inferred time series frequency: '5min'
Inferred time series frequency: '5min'
Inferred time series frequency: '5min'
Inferred time series frequency: '5min'
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================

Starting training. Start time is 2025-07-01 22:49:16

Starting training. Start time is 2025-07-01 22:49:16

Starting training. Start time is 2025-07-01 22:49:16

Starting training. Start time is 2025-07-01 22:49:16

Starting training. Start time is 2025-07-01 22:49:16

Starting training. Start time is 2025-07-01 22:49:16

Starting training. Start time is 2025-07-01 22:49:16

Starting training. Start time is 2025-07-01 22:49:16
Models that will be trained: ['Chronos[amazon__chronos-t5-small]']
Models that will be trained: ['Chronos[amazon__chronos-t5-small]']
Models that will be trained: ['Chronos[amazon__chronos-t5-small]']
Models that will be trained: ['Chronos[amazon__chronos-t5-small]']
Models that will be trained: ['Chronos[amazon__chronos-t5-small]']
Models that will be trained: ['Chronos[amazon__chronos-t5-small]']
Models that will be trained: ['Chronos[amazon__chronos-t5-small]']
Models that will be trained: ['Chronos[amazon__chronos-t5-small]']
Training timeseries model Chronos[amazon__chronos-t5-small]. Training for up to 6000.0s of the 6000.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-t5-small]. Training for up to 6000.0s of the 6000.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-t5-small]. Training for up to 6000.0s of the 6000.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-t5-small]. Training for up to 6000.0s of the 6000.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-t5-small]. Training for up to 6000.0s of the 6000.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-t5-small]. Training for up to 6000.0s of the 6000.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-t5-small]. Training for up to 6000.0s of the 6000.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-t5-small]. Training for up to 6000.0s of the 6000.0s of remaining time.
	Warning: Exception caused Chronos[amazon__chronos-t5-small] to fail during training... Skipping this model.
	Warning: Exception caused Chronos[amazon__chronos-t5-small] to fail during training... Skipping this model.
	Warning: Exception caused Chronos[amazon__chronos-t5-small] to fail during training... Skipping this model.
	Warning: Exception caused Chronos[amazon__chronos-t5-small] to fail during training... Skipping this model.
	Warning: Exception caused Chronos[amazon__chronos-t5-small] to fail during training... Skipping this model.
	Warning: Exception caused Chronos[amazon__chronos-t5-small] to fail during training... Skipping this model.
	Warning: Exception caused Chronos[amazon__chronos-t5-small] to fail during training... Skipping this model.
	Warning: Exception caused Chronos[amazon__chronos-t5-small] to fail during training... Skipping this model.
	Chronos[amazon__chronos-t5-small]\W0 requires a GPU to run, but no GPU was detected. Please make sure that you are using a computer with a CUDA-compatible GPU and `import torch; torch.cuda.is_available()` returns `True`.
	Chronos[amazon__chronos-t5-small]\W0 requires a GPU to run, but no GPU was detected. Please make sure that you are using a computer with a CUDA-compatible GPU and `import torch; torch.cuda.is_available()` returns `True`.
	Chronos[amazon__chronos-t5-small]\W0 requires a GPU to run, but no GPU was detected. Please make sure that you are using a computer with a CUDA-compatible GPU and `import torch; torch.cuda.is_available()` returns `True`.
	Chronos[amazon__chronos-t5-small]\W0 requires a GPU to run, but no GPU was detected. Please make sure that you are using a computer with a CUDA-compatible GPU and `import torch; torch.cuda.is_available()` returns `True`.
	Chronos[amazon__chronos-t5-small]\W0 requires a GPU to run, but no GPU was detected. Please make sure that you are using a computer with a CUDA-compatible GPU and `import torch; torch.cuda.is_available()` returns `True`.
	Chronos[amazon__chronos-t5-small]\W0 requires a GPU to run, but no GPU was detected. Please make sure that you are using a computer with a CUDA-compatible GPU and `import torch; torch.cuda.is_available()` returns `True`.
	Chronos[amazon__chronos-t5-small]\W0 requires a GPU to run, but no GPU was detected. Please make sure that you are using a computer with a CUDA-compatible GPU and `import torch; torch.cuda.is_available()` returns `True`.
	Chronos[amazon__chronos-t5-small]\W0 requires a GPU to run, but no GPU was detected. Please make sure that you are using a computer with a CUDA-compatible GPU and `import torch; torch.cuda.is_available()` returns `True`.
Not fitting ensemble as no models were successfully trained.
Not fitting ensemble as no models were successfully trained.
Not fitting ensemble as no models were successfully trained.
Not fitting ensemble as no models were successfully trained.
Not fitting ensemble as no models were successfully trained.
Not fitting ensemble as no models were successfully trained.
Not fitting ensemble as no models were successfully trained.
Not fitting ensemble as no models were successfully trained.
Training complete. Models trained: []
Training complete. Models trained: []
Training complete. Models trained: []
Training complete. Models trained: []
Training complete. Models trained: []
Training complete. Models trained: []
Training complete. Models trained: []
Training complete. Models trained: []
Total runtime: 0.02 s
Total runtime: 0.02 s
Total runtime: 0.02 s
Total runtime: 0.02 s
Total runtime: 0.02 s
Total runtime: 0.02 s
Total runtime: 0.02 s
Total runtime: 0.02 s
Trainer has no fit models that can predict.
Trainer has no fit models that can predict.
Trainer has no fit models that can predict.
Trainer has no fit models that can predict.
Trainer has no fit models that can predict.
Trainer has no fit models that can predict.
Trainer has no fit models that can predict.
Trainer has no fit models that can predict.
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Beginning AutoGluon training... Time limit = 6000s
Beginning AutoGluon training... Time limit = 6000s
Beginning AutoGluon training... Time limit = 6000s
Beginning AutoGluon training... Time limit = 6000s
Beginning AutoGluon training... Time limit = 6000s
Beginning AutoGluon training... Time limit = 6000s
Beginning AutoGluon training... Time limit = 6000s
Beginning AutoGluon training... Time limit = 6000s
Beginning AutoGluon training... Time limit = 6000s
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.12 GB / 63.10 GB (57.2%)
Disk Space Avail:   129.13 GB / 465.02 GB (27.8%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.12 GB / 63.10 GB (57.2%)
Disk Space Avail:   129.13 GB / 465.02 GB (27.8%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.12 GB / 63.10 GB (57.2%)
Disk Space Avail:   129.13 GB / 465.02 GB (27.8%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.12 GB / 63.10 GB (57.2%)
Disk Space Avail:   129.13 GB / 465.02 GB (27.8%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.12 GB / 63.10 GB (57.2%)
Disk Space Avail:   129.13 GB / 465.02 GB (27.8%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.12 GB / 63.10 GB (57.2%)
Disk Space Avail:   129.13 GB / 465.02 GB (27.8%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.12 GB / 63.10 GB (57.2%)
Disk Space Avail:   129.13 GB / 465.02 GB (27.8%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.12 GB / 63.10 GB (57.2%)
Disk Space Avail:   129.13 GB / 465.02 GB (27.8%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.12 GB / 63.10 GB (57.2%)
Disk Space Avail:   129.13 GB / 465.02 GB (27.8%)
===================================================
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-t5-small'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6000,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-t5-small'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6000,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-t5-small'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6000,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-t5-small'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6000,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-t5-small'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6000,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-t5-small'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6000,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-t5-small'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6000,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-t5-small'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6000,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-t5-small'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6000,
 'verbosity': 2}

Inferred time series frequency: '5min'
Inferred time series frequency: '5min'
Inferred time series frequency: '5min'
Inferred time series frequency: '5min'
Inferred time series frequency: '5min'
Inferred time series frequency: '5min'
Inferred time series frequency: '5min'
Inferred time series frequency: '5min'
Inferred time series frequency: '5min'
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================

Starting training. Start time is 2025-07-01 22:53:01

Starting training. Start time is 2025-07-01 22:53:01

Starting training. Start time is 2025-07-01 22:53:01

Starting training. Start time is 2025-07-01 22:53:01

Starting training. Start time is 2025-07-01 22:53:01

Starting training. Start time is 2025-07-01 22:53:01

Starting training. Start time is 2025-07-01 22:53:01

Starting training. Start time is 2025-07-01 22:53:01

Starting training. Start time is 2025-07-01 22:53:01
Models that will be trained: ['Chronos[amazon__chronos-t5-small]']
Models that will be trained: ['Chronos[amazon__chronos-t5-small]']
Models that will be trained: ['Chronos[amazon__chronos-t5-small]']
Models that will be trained: ['Chronos[amazon__chronos-t5-small]']
Models that will be trained: ['Chronos[amazon__chronos-t5-small]']
Models that will be trained: ['Chronos[amazon__chronos-t5-small]']
Models that will be trained: ['Chronos[amazon__chronos-t5-small]']
Models that will be trained: ['Chronos[amazon__chronos-t5-small]']
Models that will be trained: ['Chronos[amazon__chronos-t5-small]']
Training timeseries model Chronos[amazon__chronos-t5-small]. Training for up to 6000.0s of the 6000.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-t5-small]. Training for up to 6000.0s of the 6000.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-t5-small]. Training for up to 6000.0s of the 6000.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-t5-small]. Training for up to 6000.0s of the 6000.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-t5-small]. Training for up to 6000.0s of the 6000.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-t5-small]. Training for up to 6000.0s of the 6000.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-t5-small]. Training for up to 6000.0s of the 6000.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-t5-small]. Training for up to 6000.0s of the 6000.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-t5-small]. Training for up to 6000.0s of the 6000.0s of remaining time.
	Warning: Exception caused Chronos[amazon__chronos-t5-small] to fail during training... Skipping this model.
	Warning: Exception caused Chronos[amazon__chronos-t5-small] to fail during training... Skipping this model.
	Warning: Exception caused Chronos[amazon__chronos-t5-small] to fail during training... Skipping this model.
	Warning: Exception caused Chronos[amazon__chronos-t5-small] to fail during training... Skipping this model.
	Warning: Exception caused Chronos[amazon__chronos-t5-small] to fail during training... Skipping this model.
	Warning: Exception caused Chronos[amazon__chronos-t5-small] to fail during training... Skipping this model.
	Warning: Exception caused Chronos[amazon__chronos-t5-small] to fail during training... Skipping this model.
	Warning: Exception caused Chronos[amazon__chronos-t5-small] to fail during training... Skipping this model.
	Warning: Exception caused Chronos[amazon__chronos-t5-small] to fail during training... Skipping this model.
	Chronos[amazon__chronos-t5-small]\W0 requires a GPU to run, but no GPU was detected. Please make sure that you are using a computer with a CUDA-compatible GPU and `import torch; torch.cuda.is_available()` returns `True`.
	Chronos[amazon__chronos-t5-small]\W0 requires a GPU to run, but no GPU was detected. Please make sure that you are using a computer with a CUDA-compatible GPU and `import torch; torch.cuda.is_available()` returns `True`.
	Chronos[amazon__chronos-t5-small]\W0 requires a GPU to run, but no GPU was detected. Please make sure that you are using a computer with a CUDA-compatible GPU and `import torch; torch.cuda.is_available()` returns `True`.
	Chronos[amazon__chronos-t5-small]\W0 requires a GPU to run, but no GPU was detected. Please make sure that you are using a computer with a CUDA-compatible GPU and `import torch; torch.cuda.is_available()` returns `True`.
	Chronos[amazon__chronos-t5-small]\W0 requires a GPU to run, but no GPU was detected. Please make sure that you are using a computer with a CUDA-compatible GPU and `import torch; torch.cuda.is_available()` returns `True`.
	Chronos[amazon__chronos-t5-small]\W0 requires a GPU to run, but no GPU was detected. Please make sure that you are using a computer with a CUDA-compatible GPU and `import torch; torch.cuda.is_available()` returns `True`.
	Chronos[amazon__chronos-t5-small]\W0 requires a GPU to run, but no GPU was detected. Please make sure that you are using a computer with a CUDA-compatible GPU and `import torch; torch.cuda.is_available()` returns `True`.
	Chronos[amazon__chronos-t5-small]\W0 requires a GPU to run, but no GPU was detected. Please make sure that you are using a computer with a CUDA-compatible GPU and `import torch; torch.cuda.is_available()` returns `True`.
	Chronos[amazon__chronos-t5-small]\W0 requires a GPU to run, but no GPU was detected. Please make sure that you are using a computer with a CUDA-compatible GPU and `import torch; torch.cuda.is_available()` returns `True`.
Not fitting ensemble as no models were successfully trained.
Not fitting ensemble as no models were successfully trained.
Not fitting ensemble as no models were successfully trained.
Not fitting ensemble as no models were successfully trained.
Not fitting ensemble as no models were successfully trained.
Not fitting ensemble as no models were successfully trained.
Not fitting ensemble as no models were successfully trained.
Not fitting ensemble as no models were successfully trained.
Not fitting ensemble as no models were successfully trained.
Training complete. Models trained: []
Training complete. Models trained: []
Training complete. Models trained: []
Training complete. Models trained: []
Training complete. Models trained: []
Training complete. Models trained: []
Training complete. Models trained: []
Training complete. Models trained: []
Training complete. Models trained: []
Total runtime: 0.02 s
Total runtime: 0.02 s
Total runtime: 0.02 s
Total runtime: 0.02 s
Total runtime: 0.02 s
Total runtime: 0.02 s
Total runtime: 0.02 s
Total runtime: 0.02 s
Total runtime: 0.02 s
Trainer has no fit models that can predict.
Trainer has no fit models that can predict.
Trainer has no fit models that can predict.
Trainer has no fit models that can predict.
Trainer has no fit models that can predict.
Trainer has no fit models that can predict.
Trainer has no fit models that can predict.
Trainer has no fit models that can predict.
Trainer has no fit models that can predict.
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Beginning AutoGluon training... Time limit = 6000s
Beginning AutoGluon training... Time limit = 6000s
Beginning AutoGluon training... Time limit = 6000s
Beginning AutoGluon training... Time limit = 6000s
Beginning AutoGluon training... Time limit = 6000s
Beginning AutoGluon training... Time limit = 6000s
Beginning AutoGluon training... Time limit = 6000s
Beginning AutoGluon training... Time limit = 6000s
Beginning AutoGluon training... Time limit = 6000s
Beginning AutoGluon training... Time limit = 6000s
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.24 GB / 63.10 GB (57.4%)
Disk Space Avail:   129.13 GB / 465.02 GB (27.8%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.24 GB / 63.10 GB (57.4%)
Disk Space Avail:   129.13 GB / 465.02 GB (27.8%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.24 GB / 63.10 GB (57.4%)
Disk Space Avail:   129.13 GB / 465.02 GB (27.8%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.24 GB / 63.10 GB (57.4%)
Disk Space Avail:   129.13 GB / 465.02 GB (27.8%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.24 GB / 63.10 GB (57.4%)
Disk Space Avail:   129.13 GB / 465.02 GB (27.8%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.24 GB / 63.10 GB (57.4%)
Disk Space Avail:   129.13 GB / 465.02 GB (27.8%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.24 GB / 63.10 GB (57.4%)
Disk Space Avail:   129.13 GB / 465.02 GB (27.8%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.24 GB / 63.10 GB (57.4%)
Disk Space Avail:   129.13 GB / 465.02 GB (27.8%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.24 GB / 63.10 GB (57.4%)
Disk Space Avail:   129.13 GB / 465.02 GB (27.8%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.24 GB / 63.10 GB (57.4%)
Disk Space Avail:   129.13 GB / 465.02 GB (27.8%)
===================================================
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-t5-small'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6000,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-t5-small'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6000,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-t5-small'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6000,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-t5-small'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6000,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-t5-small'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6000,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-t5-small'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6000,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-t5-small'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6000,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-t5-small'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6000,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-t5-small'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6000,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-t5-small'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 6000,
 'verbosity': 2}

Inferred time series frequency: '5min'
Inferred time series frequency: '5min'
Inferred time series frequency: '5min'
Inferred time series frequency: '5min'
Inferred time series frequency: '5min'
Inferred time series frequency: '5min'
Inferred time series frequency: '5min'
Inferred time series frequency: '5min'
Inferred time series frequency: '5min'
Inferred time series frequency: '5min'
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================

Starting training. Start time is 2025-07-01 22:53:18

Starting training. Start time is 2025-07-01 22:53:18

Starting training. Start time is 2025-07-01 22:53:18

Starting training. Start time is 2025-07-01 22:53:18

Starting training. Start time is 2025-07-01 22:53:18

Starting training. Start time is 2025-07-01 22:53:18

Starting training. Start time is 2025-07-01 22:53:18

Starting training. Start time is 2025-07-01 22:53:18

Starting training. Start time is 2025-07-01 22:53:18

Starting training. Start time is 2025-07-01 22:53:18
Models that will be trained: ['Chronos[amazon__chronos-t5-small]']
Models that will be trained: ['Chronos[amazon__chronos-t5-small]']
Models that will be trained: ['Chronos[amazon__chronos-t5-small]']
Models that will be trained: ['Chronos[amazon__chronos-t5-small]']
Models that will be trained: ['Chronos[amazon__chronos-t5-small]']
Models that will be trained: ['Chronos[amazon__chronos-t5-small]']
Models that will be trained: ['Chronos[amazon__chronos-t5-small]']
Models that will be trained: ['Chronos[amazon__chronos-t5-small]']
Models that will be trained: ['Chronos[amazon__chronos-t5-small]']
Models that will be trained: ['Chronos[amazon__chronos-t5-small]']
Training timeseries model Chronos[amazon__chronos-t5-small]. Training for up to 6000.0s of the 6000.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-t5-small]. Training for up to 6000.0s of the 6000.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-t5-small]. Training for up to 6000.0s of the 6000.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-t5-small]. Training for up to 6000.0s of the 6000.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-t5-small]. Training for up to 6000.0s of the 6000.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-t5-small]. Training for up to 6000.0s of the 6000.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-t5-small]. Training for up to 6000.0s of the 6000.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-t5-small]. Training for up to 6000.0s of the 6000.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-t5-small]. Training for up to 6000.0s of the 6000.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-t5-small]. Training for up to 6000.0s of the 6000.0s of remaining time.
	Warning: Exception caused Chronos[amazon__chronos-t5-small] to fail during training... Skipping this model.
	Warning: Exception caused Chronos[amazon__chronos-t5-small] to fail during training... Skipping this model.
	Warning: Exception caused Chronos[amazon__chronos-t5-small] to fail during training... Skipping this model.
	Warning: Exception caused Chronos[amazon__chronos-t5-small] to fail during training... Skipping this model.
	Warning: Exception caused Chronos[amazon__chronos-t5-small] to fail during training... Skipping this model.
	Warning: Exception caused Chronos[amazon__chronos-t5-small] to fail during training... Skipping this model.
	Warning: Exception caused Chronos[amazon__chronos-t5-small] to fail during training... Skipping this model.
	Warning: Exception caused Chronos[amazon__chronos-t5-small] to fail during training... Skipping this model.
	Warning: Exception caused Chronos[amazon__chronos-t5-small] to fail during training... Skipping this model.
	Warning: Exception caused Chronos[amazon__chronos-t5-small] to fail during training... Skipping this model.
	Chronos[amazon__chronos-t5-small]\W0 requires a GPU to run, but no GPU was detected. Please make sure that you are using a computer with a CUDA-compatible GPU and `import torch; torch.cuda.is_available()` returns `True`.
	Chronos[amazon__chronos-t5-small]\W0 requires a GPU to run, but no GPU was detected. Please make sure that you are using a computer with a CUDA-compatible GPU and `import torch; torch.cuda.is_available()` returns `True`.
	Chronos[amazon__chronos-t5-small]\W0 requires a GPU to run, but no GPU was detected. Please make sure that you are using a computer with a CUDA-compatible GPU and `import torch; torch.cuda.is_available()` returns `True`.
	Chronos[amazon__chronos-t5-small]\W0 requires a GPU to run, but no GPU was detected. Please make sure that you are using a computer with a CUDA-compatible GPU and `import torch; torch.cuda.is_available()` returns `True`.
	Chronos[amazon__chronos-t5-small]\W0 requires a GPU to run, but no GPU was detected. Please make sure that you are using a computer with a CUDA-compatible GPU and `import torch; torch.cuda.is_available()` returns `True`.
	Chronos[amazon__chronos-t5-small]\W0 requires a GPU to run, but no GPU was detected. Please make sure that you are using a computer with a CUDA-compatible GPU and `import torch; torch.cuda.is_available()` returns `True`.
	Chronos[amazon__chronos-t5-small]\W0 requires a GPU to run, but no GPU was detected. Please make sure that you are using a computer with a CUDA-compatible GPU and `import torch; torch.cuda.is_available()` returns `True`.
	Chronos[amazon__chronos-t5-small]\W0 requires a GPU to run, but no GPU was detected. Please make sure that you are using a computer with a CUDA-compatible GPU and `import torch; torch.cuda.is_available()` returns `True`.
	Chronos[amazon__chronos-t5-small]\W0 requires a GPU to run, but no GPU was detected. Please make sure that you are using a computer with a CUDA-compatible GPU and `import torch; torch.cuda.is_available()` returns `True`.
	Chronos[amazon__chronos-t5-small]\W0 requires a GPU to run, but no GPU was detected. Please make sure that you are using a computer with a CUDA-compatible GPU and `import torch; torch.cuda.is_available()` returns `True`.
Not fitting ensemble as no models were successfully trained.
Not fitting ensemble as no models were successfully trained.
Not fitting ensemble as no models were successfully trained.
Not fitting ensemble as no models were successfully trained.
Not fitting ensemble as no models were successfully trained.
Not fitting ensemble as no models were successfully trained.
Not fitting ensemble as no models were successfully trained.
Not fitting ensemble as no models were successfully trained.
Not fitting ensemble as no models were successfully trained.
Not fitting ensemble as no models were successfully trained.
Training complete. Models trained: []
Training complete. Models trained: []
Training complete. Models trained: []
Training complete. Models trained: []
Training complete. Models trained: []
Training complete. Models trained: []
Training complete. Models trained: []
Training complete. Models trained: []
Training complete. Models trained: []
Training complete. Models trained: []
Total runtime: 0.02 s
Total runtime: 0.02 s
Total runtime: 0.02 s
Total runtime: 0.02 s
Total runtime: 0.02 s
Total runtime: 0.02 s
Total runtime: 0.02 s
Total runtime: 0.02 s
Total runtime: 0.02 s
Total runtime: 0.02 s
Trainer has no fit models that can predict.
Trainer has no fit models that can predict.
Trainer has no fit models that can predict.
Trainer has no fit models that can predict.
Trainer has no fit models that can predict.
Trainer has no fit models that can predict.
Trainer has no fit models that can predict.
Trainer has no fit models that can predict.
Trainer has no fit models that can predict.
Trainer has no fit models that can predict.
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.70 GB / 63.10 GB (58.2%)
Disk Space Avail:   128.88 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.70 GB / 63.10 GB (58.2%)
Disk Space Avail:   128.88 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.70 GB / 63.10 GB (58.2%)
Disk Space Avail:   128.88 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.70 GB / 63.10 GB (58.2%)
Disk Space Avail:   128.88 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.70 GB / 63.10 GB (58.2%)
Disk Space Avail:   128.88 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.70 GB / 63.10 GB (58.2%)
Disk Space Avail:   128.88 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.70 GB / 63.10 GB (58.2%)
Disk Space Avail:   128.88 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.70 GB / 63.10 GB (58.2%)
Disk Space Avail:   128.88 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.70 GB / 63.10 GB (58.2%)
Disk Space Avail:   128.88 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.70 GB / 63.10 GB (58.2%)
Disk Space Avail:   128.88 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.70 GB / 63.10 GB (58.2%)
Disk Space Avail:   128.88 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.70 GB / 63.10 GB (58.2%)
Disk Space Avail:   128.88 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.70 GB / 63.10 GB (58.2%)
Disk Space Avail:   128.88 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.70 GB / 63.10 GB (58.2%)
Disk Space Avail:   128.88 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.70 GB / 63.10 GB (58.2%)
Disk Space Avail:   128.88 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.70 GB / 63.10 GB (58.2%)
Disk Space Avail:   128.88 GB / 465.02 GB (27.7%)
===================================================
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================

Starting training. Start time is 2025-07-01 23:13:28

Starting training. Start time is 2025-07-01 23:13:28

Starting training. Start time is 2025-07-01 23:13:28

Starting training. Start time is 2025-07-01 23:13:28

Starting training. Start time is 2025-07-01 23:13:28

Starting training. Start time is 2025-07-01 23:13:28

Starting training. Start time is 2025-07-01 23:13:28

Starting training. Start time is 2025-07-01 23:13:28

Starting training. Start time is 2025-07-01 23:13:28

Starting training. Start time is 2025-07-01 23:13:28

Starting training. Start time is 2025-07-01 23:13:28

Starting training. Start time is 2025-07-01 23:13:28

Starting training. Start time is 2025-07-01 23:13:28

Starting training. Start time is 2025-07-01 23:13:28

Starting training. Start time is 2025-07-01 23:13:28

Starting training. Start time is 2025-07-01 23:13:28
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	3.18    s     = Validation (prediction) runtime
	3.18    s     = Validation (prediction) runtime
	3.18    s     = Validation (prediction) runtime
	3.18    s     = Validation (prediction) runtime
	3.18    s     = Validation (prediction) runtime
	3.18    s     = Validation (prediction) runtime
	3.18    s     = Validation (prediction) runtime
	3.18    s     = Validation (prediction) runtime
	3.18    s     = Validation (prediction) runtime
	3.18    s     = Validation (prediction) runtime
	3.18    s     = Validation (prediction) runtime
	3.18    s     = Validation (prediction) runtime
	3.18    s     = Validation (prediction) runtime
	3.18    s     = Validation (prediction) runtime
	3.18    s     = Validation (prediction) runtime
	3.18    s     = Validation (prediction) runtime
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Total runtime: 3.21 s
Total runtime: 3.21 s
Total runtime: 3.21 s
Total runtime: 3.21 s
Total runtime: 3.21 s
Total runtime: 3.21 s
Total runtime: 3.21 s
Total runtime: 3.21 s
Total runtime: 3.21 s
Total runtime: 3.21 s
Total runtime: 3.21 s
Total runtime: 3.21 s
Total runtime: 3.21 s
Total runtime: 3.21 s
Total runtime: 3.21 s
Total runtime: 3.21 s
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Model not specified in predict, will default to the model with the best validation score: Chronos[amazon__chronos-bolt-base]
Model not specified in predict, will default to the model with the best validation score: Chronos[amazon__chronos-bolt-base]
Model not specified in predict, will default to the model with the best validation score: Chronos[amazon__chronos-bolt-base]
Model not specified in predict, will default to the model with the best validation score: Chronos[amazon__chronos-bolt-base]
Model not specified in predict, will default to the model with the best validation score: Chronos[amazon__chronos-bolt-base]
Model not specified in predict, will default to the model with the best validation score: Chronos[amazon__chronos-bolt-base]
Model not specified in predict, will default to the model with the best validation score: Chronos[amazon__chronos-bolt-base]
Model not specified in predict, will default to the model with the best validation score: Chronos[amazon__chronos-bolt-base]
Model not specified in predict, will default to the model with the best validation score: Chronos[amazon__chronos-bolt-base]
Model not specified in predict, will default to the model with the best validation score: Chronos[amazon__chronos-bolt-base]
Model not specified in predict, will default to the model with the best validation score: Chronos[amazon__chronos-bolt-base]
Model not specified in predict, will default to the model with the best validation score: Chronos[amazon__chronos-bolt-base]
Model not specified in predict, will default to the model with the best validation score: Chronos[amazon__chronos-bolt-base]
Model not specified in predict, will default to the model with the best validation score: Chronos[amazon__chronos-bolt-base]
Model not specified in predict, will default to the model with the best validation score: Chronos[amazon__chronos-bolt-base]
Model not specified in predict, will default to the model with the best validation score: Chronos[amazon__chronos-bolt-base]
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.57 GB / 63.10 GB (58.0%)
Disk Space Avail:   128.88 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.57 GB / 63.10 GB (58.0%)
Disk Space Avail:   128.88 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.57 GB / 63.10 GB (58.0%)
Disk Space Avail:   128.88 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.57 GB / 63.10 GB (58.0%)
Disk Space Avail:   128.88 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.57 GB / 63.10 GB (58.0%)
Disk Space Avail:   128.88 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.57 GB / 63.10 GB (58.0%)
Disk Space Avail:   128.88 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.57 GB / 63.10 GB (58.0%)
Disk Space Avail:   128.88 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.57 GB / 63.10 GB (58.0%)
Disk Space Avail:   128.88 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.57 GB / 63.10 GB (58.0%)
Disk Space Avail:   128.88 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.57 GB / 63.10 GB (58.0%)
Disk Space Avail:   128.88 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.57 GB / 63.10 GB (58.0%)
Disk Space Avail:   128.88 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.57 GB / 63.10 GB (58.0%)
Disk Space Avail:   128.88 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.57 GB / 63.10 GB (58.0%)
Disk Space Avail:   128.88 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.57 GB / 63.10 GB (58.0%)
Disk Space Avail:   128.88 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.57 GB / 63.10 GB (58.0%)
Disk Space Avail:   128.88 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.57 GB / 63.10 GB (58.0%)
Disk Space Avail:   128.88 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.57 GB / 63.10 GB (58.0%)
Disk Space Avail:   128.88 GB / 465.02 GB (27.7%)
===================================================
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================

Starting training. Start time is 2025-07-01 23:13:41

Starting training. Start time is 2025-07-01 23:13:41

Starting training. Start time is 2025-07-01 23:13:41

Starting training. Start time is 2025-07-01 23:13:41

Starting training. Start time is 2025-07-01 23:13:41

Starting training. Start time is 2025-07-01 23:13:41

Starting training. Start time is 2025-07-01 23:13:41

Starting training. Start time is 2025-07-01 23:13:41

Starting training. Start time is 2025-07-01 23:13:41

Starting training. Start time is 2025-07-01 23:13:41

Starting training. Start time is 2025-07-01 23:13:41

Starting training. Start time is 2025-07-01 23:13:41

Starting training. Start time is 2025-07-01 23:13:41

Starting training. Start time is 2025-07-01 23:13:41

Starting training. Start time is 2025-07-01 23:13:41

Starting training. Start time is 2025-07-01 23:13:41

Starting training. Start time is 2025-07-01 23:13:41
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	1.23    s     = Validation (prediction) runtime
	1.23    s     = Validation (prediction) runtime
	1.23    s     = Validation (prediction) runtime
	1.23    s     = Validation (prediction) runtime
	1.23    s     = Validation (prediction) runtime
	1.23    s     = Validation (prediction) runtime
	1.23    s     = Validation (prediction) runtime
	1.23    s     = Validation (prediction) runtime
	1.23    s     = Validation (prediction) runtime
	1.23    s     = Validation (prediction) runtime
	1.23    s     = Validation (prediction) runtime
	1.23    s     = Validation (prediction) runtime
	1.23    s     = Validation (prediction) runtime
	1.23    s     = Validation (prediction) runtime
	1.23    s     = Validation (prediction) runtime
	1.23    s     = Validation (prediction) runtime
	1.23    s     = Validation (prediction) runtime
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Total runtime: 1.26 s
Total runtime: 1.26 s
Total runtime: 1.26 s
Total runtime: 1.26 s
Total runtime: 1.26 s
Total runtime: 1.26 s
Total runtime: 1.26 s
Total runtime: 1.26 s
Total runtime: 1.26 s
Total runtime: 1.26 s
Total runtime: 1.26 s
Total runtime: 1.26 s
Total runtime: 1.26 s
Total runtime: 1.26 s
Total runtime: 1.26 s
Total runtime: 1.26 s
Total runtime: 1.26 s
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Model not specified in predict, will default to the model with the best validation score: Chronos[amazon__chronos-bolt-base]
Model not specified in predict, will default to the model with the best validation score: Chronos[amazon__chronos-bolt-base]
Model not specified in predict, will default to the model with the best validation score: Chronos[amazon__chronos-bolt-base]
Model not specified in predict, will default to the model with the best validation score: Chronos[amazon__chronos-bolt-base]
Model not specified in predict, will default to the model with the best validation score: Chronos[amazon__chronos-bolt-base]
Model not specified in predict, will default to the model with the best validation score: Chronos[amazon__chronos-bolt-base]
Model not specified in predict, will default to the model with the best validation score: Chronos[amazon__chronos-bolt-base]
Model not specified in predict, will default to the model with the best validation score: Chronos[amazon__chronos-bolt-base]
Model not specified in predict, will default to the model with the best validation score: Chronos[amazon__chronos-bolt-base]
Model not specified in predict, will default to the model with the best validation score: Chronos[amazon__chronos-bolt-base]
Model not specified in predict, will default to the model with the best validation score: Chronos[amazon__chronos-bolt-base]
Model not specified in predict, will default to the model with the best validation score: Chronos[amazon__chronos-bolt-base]
Model not specified in predict, will default to the model with the best validation score: Chronos[amazon__chronos-bolt-base]
Model not specified in predict, will default to the model with the best validation score: Chronos[amazon__chronos-bolt-base]
Model not specified in predict, will default to the model with the best validation score: Chronos[amazon__chronos-bolt-base]
Model not specified in predict, will default to the model with the best validation score: Chronos[amazon__chronos-bolt-base]
Model not specified in predict, will default to the model with the best validation score: Chronos[amazon__chronos-bolt-base]
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       37.24 GB / 63.10 GB (59.0%)
Disk Space Avail:   128.87 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       37.24 GB / 63.10 GB (59.0%)
Disk Space Avail:   128.87 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       37.24 GB / 63.10 GB (59.0%)
Disk Space Avail:   128.87 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       37.24 GB / 63.10 GB (59.0%)
Disk Space Avail:   128.87 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       37.24 GB / 63.10 GB (59.0%)
Disk Space Avail:   128.87 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       37.24 GB / 63.10 GB (59.0%)
Disk Space Avail:   128.87 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       37.24 GB / 63.10 GB (59.0%)
Disk Space Avail:   128.87 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       37.24 GB / 63.10 GB (59.0%)
Disk Space Avail:   128.87 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       37.24 GB / 63.10 GB (59.0%)
Disk Space Avail:   128.87 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       37.24 GB / 63.10 GB (59.0%)
Disk Space Avail:   128.87 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       37.24 GB / 63.10 GB (59.0%)
Disk Space Avail:   128.87 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       37.24 GB / 63.10 GB (59.0%)
Disk Space Avail:   128.87 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       37.24 GB / 63.10 GB (59.0%)
Disk Space Avail:   128.87 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       37.24 GB / 63.10 GB (59.0%)
Disk Space Avail:   128.87 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       37.24 GB / 63.10 GB (59.0%)
Disk Space Avail:   128.87 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       37.24 GB / 63.10 GB (59.0%)
Disk Space Avail:   128.87 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       37.24 GB / 63.10 GB (59.0%)
Disk Space Avail:   128.87 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       37.24 GB / 63.10 GB (59.0%)
Disk Space Avail:   128.87 GB / 465.02 GB (27.7%)
===================================================
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================

Starting training. Start time is 2025-07-01 23:20:23

Starting training. Start time is 2025-07-01 23:20:23

Starting training. Start time is 2025-07-01 23:20:23

Starting training. Start time is 2025-07-01 23:20:23

Starting training. Start time is 2025-07-01 23:20:23

Starting training. Start time is 2025-07-01 23:20:23

Starting training. Start time is 2025-07-01 23:20:23

Starting training. Start time is 2025-07-01 23:20:23

Starting training. Start time is 2025-07-01 23:20:23

Starting training. Start time is 2025-07-01 23:20:23

Starting training. Start time is 2025-07-01 23:20:23

Starting training. Start time is 2025-07-01 23:20:23

Starting training. Start time is 2025-07-01 23:20:23

Starting training. Start time is 2025-07-01 23:20:23

Starting training. Start time is 2025-07-01 23:20:23

Starting training. Start time is 2025-07-01 23:20:23

Starting training. Start time is 2025-07-01 23:20:23

Starting training. Start time is 2025-07-01 23:20:23
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	0.01    s     = Training runtime
	0.01    s     = Training runtime
	0.01    s     = Training runtime
	0.01    s     = Training runtime
	0.01    s     = Training runtime
	0.01    s     = Training runtime
	0.01    s     = Training runtime
	0.01    s     = Training runtime
	0.01    s     = Training runtime
	0.01    s     = Training runtime
	0.01    s     = Training runtime
	0.01    s     = Training runtime
	0.01    s     = Training runtime
	0.01    s     = Training runtime
	0.01    s     = Training runtime
	0.01    s     = Training runtime
	0.01    s     = Training runtime
	0.01    s     = Training runtime
	1.08    s     = Validation (prediction) runtime
	1.08    s     = Validation (prediction) runtime
	1.08    s     = Validation (prediction) runtime
	1.08    s     = Validation (prediction) runtime
	1.08    s     = Validation (prediction) runtime
	1.08    s     = Validation (prediction) runtime
	1.08    s     = Validation (prediction) runtime
	1.08    s     = Validation (prediction) runtime
	1.08    s     = Validation (prediction) runtime
	1.08    s     = Validation (prediction) runtime
	1.08    s     = Validation (prediction) runtime
	1.08    s     = Validation (prediction) runtime
	1.08    s     = Validation (prediction) runtime
	1.08    s     = Validation (prediction) runtime
	1.08    s     = Validation (prediction) runtime
	1.08    s     = Validation (prediction) runtime
	1.08    s     = Validation (prediction) runtime
	1.08    s     = Validation (prediction) runtime
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Total runtime: 1.10 s
Total runtime: 1.10 s
Total runtime: 1.10 s
Total runtime: 1.10 s
Total runtime: 1.10 s
Total runtime: 1.10 s
Total runtime: 1.10 s
Total runtime: 1.10 s
Total runtime: 1.10 s
Total runtime: 1.10 s
Total runtime: 1.10 s
Total runtime: 1.10 s
Total runtime: 1.10 s
Total runtime: 1.10 s
Total runtime: 1.10 s
Total runtime: 1.10 s
Total runtime: 1.10 s
Total runtime: 1.10 s
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       37.27 GB / 63.10 GB (59.1%)
Disk Space Avail:   128.87 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       37.27 GB / 63.10 GB (59.1%)
Disk Space Avail:   128.87 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       37.27 GB / 63.10 GB (59.1%)
Disk Space Avail:   128.87 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       37.27 GB / 63.10 GB (59.1%)
Disk Space Avail:   128.87 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       37.27 GB / 63.10 GB (59.1%)
Disk Space Avail:   128.87 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       37.27 GB / 63.10 GB (59.1%)
Disk Space Avail:   128.87 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       37.27 GB / 63.10 GB (59.1%)
Disk Space Avail:   128.87 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       37.27 GB / 63.10 GB (59.1%)
Disk Space Avail:   128.87 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       37.27 GB / 63.10 GB (59.1%)
Disk Space Avail:   128.87 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       37.27 GB / 63.10 GB (59.1%)
Disk Space Avail:   128.87 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       37.27 GB / 63.10 GB (59.1%)
Disk Space Avail:   128.87 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       37.27 GB / 63.10 GB (59.1%)
Disk Space Avail:   128.87 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       37.27 GB / 63.10 GB (59.1%)
Disk Space Avail:   128.87 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       37.27 GB / 63.10 GB (59.1%)
Disk Space Avail:   128.87 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       37.27 GB / 63.10 GB (59.1%)
Disk Space Avail:   128.87 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       37.27 GB / 63.10 GB (59.1%)
Disk Space Avail:   128.87 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       37.27 GB / 63.10 GB (59.1%)
Disk Space Avail:   128.87 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       37.27 GB / 63.10 GB (59.1%)
Disk Space Avail:   128.87 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       37.27 GB / 63.10 GB (59.1%)
Disk Space Avail:   128.87 GB / 465.02 GB (27.7%)
===================================================
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================

Starting training. Start time is 2025-07-01 23:22:13

Starting training. Start time is 2025-07-01 23:22:13

Starting training. Start time is 2025-07-01 23:22:13

Starting training. Start time is 2025-07-01 23:22:13

Starting training. Start time is 2025-07-01 23:22:13

Starting training. Start time is 2025-07-01 23:22:13

Starting training. Start time is 2025-07-01 23:22:13

Starting training. Start time is 2025-07-01 23:22:13

Starting training. Start time is 2025-07-01 23:22:13

Starting training. Start time is 2025-07-01 23:22:13

Starting training. Start time is 2025-07-01 23:22:13

Starting training. Start time is 2025-07-01 23:22:13

Starting training. Start time is 2025-07-01 23:22:13

Starting training. Start time is 2025-07-01 23:22:13

Starting training. Start time is 2025-07-01 23:22:13

Starting training. Start time is 2025-07-01 23:22:13

Starting training. Start time is 2025-07-01 23:22:13

Starting training. Start time is 2025-07-01 23:22:13

Starting training. Start time is 2025-07-01 23:22:13
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	1.06    s     = Validation (prediction) runtime
	1.06    s     = Validation (prediction) runtime
	1.06    s     = Validation (prediction) runtime
	1.06    s     = Validation (prediction) runtime
	1.06    s     = Validation (prediction) runtime
	1.06    s     = Validation (prediction) runtime
	1.06    s     = Validation (prediction) runtime
	1.06    s     = Validation (prediction) runtime
	1.06    s     = Validation (prediction) runtime
	1.06    s     = Validation (prediction) runtime
	1.06    s     = Validation (prediction) runtime
	1.06    s     = Validation (prediction) runtime
	1.06    s     = Validation (prediction) runtime
	1.06    s     = Validation (prediction) runtime
	1.06    s     = Validation (prediction) runtime
	1.06    s     = Validation (prediction) runtime
	1.06    s     = Validation (prediction) runtime
	1.06    s     = Validation (prediction) runtime
	1.06    s     = Validation (prediction) runtime
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Total runtime: 1.09 s
Total runtime: 1.09 s
Total runtime: 1.09 s
Total runtime: 1.09 s
Total runtime: 1.09 s
Total runtime: 1.09 s
Total runtime: 1.09 s
Total runtime: 1.09 s
Total runtime: 1.09 s
Total runtime: 1.09 s
Total runtime: 1.09 s
Total runtime: 1.09 s
Total runtime: 1.09 s
Total runtime: 1.09 s
Total runtime: 1.09 s
Total runtime: 1.09 s
Total runtime: 1.09 s
Total runtime: 1.09 s
Total runtime: 1.09 s
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.63 GB / 63.10 GB (58.0%)
Disk Space Avail:   128.84 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.63 GB / 63.10 GB (58.0%)
Disk Space Avail:   128.84 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.63 GB / 63.10 GB (58.0%)
Disk Space Avail:   128.84 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.63 GB / 63.10 GB (58.0%)
Disk Space Avail:   128.84 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.63 GB / 63.10 GB (58.0%)
Disk Space Avail:   128.84 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.63 GB / 63.10 GB (58.0%)
Disk Space Avail:   128.84 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.63 GB / 63.10 GB (58.0%)
Disk Space Avail:   128.84 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.63 GB / 63.10 GB (58.0%)
Disk Space Avail:   128.84 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.63 GB / 63.10 GB (58.0%)
Disk Space Avail:   128.84 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.63 GB / 63.10 GB (58.0%)
Disk Space Avail:   128.84 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.63 GB / 63.10 GB (58.0%)
Disk Space Avail:   128.84 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.63 GB / 63.10 GB (58.0%)
Disk Space Avail:   128.84 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.63 GB / 63.10 GB (58.0%)
Disk Space Avail:   128.84 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.63 GB / 63.10 GB (58.0%)
Disk Space Avail:   128.84 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.63 GB / 63.10 GB (58.0%)
Disk Space Avail:   128.84 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.63 GB / 63.10 GB (58.0%)
Disk Space Avail:   128.84 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.63 GB / 63.10 GB (58.0%)
Disk Space Avail:   128.84 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.63 GB / 63.10 GB (58.0%)
Disk Space Avail:   128.84 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.63 GB / 63.10 GB (58.0%)
Disk Space Avail:   128.84 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.63 GB / 63.10 GB (58.0%)
Disk Space Avail:   128.84 GB / 465.02 GB (27.7%)
===================================================
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================

Starting training. Start time is 2025-07-01 23:29:36

Starting training. Start time is 2025-07-01 23:29:36

Starting training. Start time is 2025-07-01 23:29:36

Starting training. Start time is 2025-07-01 23:29:36

Starting training. Start time is 2025-07-01 23:29:36

Starting training. Start time is 2025-07-01 23:29:36

Starting training. Start time is 2025-07-01 23:29:36

Starting training. Start time is 2025-07-01 23:29:36

Starting training. Start time is 2025-07-01 23:29:36

Starting training. Start time is 2025-07-01 23:29:36

Starting training. Start time is 2025-07-01 23:29:36

Starting training. Start time is 2025-07-01 23:29:36

Starting training. Start time is 2025-07-01 23:29:36

Starting training. Start time is 2025-07-01 23:29:36

Starting training. Start time is 2025-07-01 23:29:36

Starting training. Start time is 2025-07-01 23:29:36

Starting training. Start time is 2025-07-01 23:29:36

Starting training. Start time is 2025-07-01 23:29:36

Starting training. Start time is 2025-07-01 23:29:36

Starting training. Start time is 2025-07-01 23:29:36
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	1.14    s     = Validation (prediction) runtime
	1.14    s     = Validation (prediction) runtime
	1.14    s     = Validation (prediction) runtime
	1.14    s     = Validation (prediction) runtime
	1.14    s     = Validation (prediction) runtime
	1.14    s     = Validation (prediction) runtime
	1.14    s     = Validation (prediction) runtime
	1.14    s     = Validation (prediction) runtime
	1.14    s     = Validation (prediction) runtime
	1.14    s     = Validation (prediction) runtime
	1.14    s     = Validation (prediction) runtime
	1.14    s     = Validation (prediction) runtime
	1.14    s     = Validation (prediction) runtime
	1.14    s     = Validation (prediction) runtime
	1.14    s     = Validation (prediction) runtime
	1.14    s     = Validation (prediction) runtime
	1.14    s     = Validation (prediction) runtime
	1.14    s     = Validation (prediction) runtime
	1.14    s     = Validation (prediction) runtime
	1.14    s     = Validation (prediction) runtime
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Total runtime: 1.18 s
Total runtime: 1.18 s
Total runtime: 1.18 s
Total runtime: 1.18 s
Total runtime: 1.18 s
Total runtime: 1.18 s
Total runtime: 1.18 s
Total runtime: 1.18 s
Total runtime: 1.18 s
Total runtime: 1.18 s
Total runtime: 1.18 s
Total runtime: 1.18 s
Total runtime: 1.18 s
Total runtime: 1.18 s
Total runtime: 1.18 s
Total runtime: 1.18 s
Total runtime: 1.18 s
Total runtime: 1.18 s
Total runtime: 1.18 s
Total runtime: 1.18 s
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Model not specified in predict, will default to the model with the best validation score: Chronos[amazon__chronos-bolt-base]
Model not specified in predict, will default to the model with the best validation score: Chronos[amazon__chronos-bolt-base]
Model not specified in predict, will default to the model with the best validation score: Chronos[amazon__chronos-bolt-base]
Model not specified in predict, will default to the model with the best validation score: Chronos[amazon__chronos-bolt-base]
Model not specified in predict, will default to the model with the best validation score: Chronos[amazon__chronos-bolt-base]
Model not specified in predict, will default to the model with the best validation score: Chronos[amazon__chronos-bolt-base]
Model not specified in predict, will default to the model with the best validation score: Chronos[amazon__chronos-bolt-base]
Model not specified in predict, will default to the model with the best validation score: Chronos[amazon__chronos-bolt-base]
Model not specified in predict, will default to the model with the best validation score: Chronos[amazon__chronos-bolt-base]
Model not specified in predict, will default to the model with the best validation score: Chronos[amazon__chronos-bolt-base]
Model not specified in predict, will default to the model with the best validation score: Chronos[amazon__chronos-bolt-base]
Model not specified in predict, will default to the model with the best validation score: Chronos[amazon__chronos-bolt-base]
Model not specified in predict, will default to the model with the best validation score: Chronos[amazon__chronos-bolt-base]
Model not specified in predict, will default to the model with the best validation score: Chronos[amazon__chronos-bolt-base]
Model not specified in predict, will default to the model with the best validation score: Chronos[amazon__chronos-bolt-base]
Model not specified in predict, will default to the model with the best validation score: Chronos[amazon__chronos-bolt-base]
Model not specified in predict, will default to the model with the best validation score: Chronos[amazon__chronos-bolt-base]
Model not specified in predict, will default to the model with the best validation score: Chronos[amazon__chronos-bolt-base]
Model not specified in predict, will default to the model with the best validation score: Chronos[amazon__chronos-bolt-base]
Model not specified in predict, will default to the model with the best validation score: Chronos[amazon__chronos-bolt-base]
Additional data provided, testing on additional data. Resulting leaderboard will be sorted according to test score (`score_test`).
Additional data provided, testing on additional data. Resulting leaderboard will be sorted according to test score (`score_test`).
Additional data provided, testing on additional data. Resulting leaderboard will be sorted according to test score (`score_test`).
Additional data provided, testing on additional data. Resulting leaderboard will be sorted according to test score (`score_test`).
Additional data provided, testing on additional data. Resulting leaderboard will be sorted according to test score (`score_test`).
Additional data provided, testing on additional data. Resulting leaderboard will be sorted according to test score (`score_test`).
Additional data provided, testing on additional data. Resulting leaderboard will be sorted according to test score (`score_test`).
Additional data provided, testing on additional data. Resulting leaderboard will be sorted according to test score (`score_test`).
Additional data provided, testing on additional data. Resulting leaderboard will be sorted according to test score (`score_test`).
Additional data provided, testing on additional data. Resulting leaderboard will be sorted according to test score (`score_test`).
Additional data provided, testing on additional data. Resulting leaderboard will be sorted according to test score (`score_test`).
Additional data provided, testing on additional data. Resulting leaderboard will be sorted according to test score (`score_test`).
Additional data provided, testing on additional data. Resulting leaderboard will be sorted according to test score (`score_test`).
Additional data provided, testing on additional data. Resulting leaderboard will be sorted according to test score (`score_test`).
Additional data provided, testing on additional data. Resulting leaderboard will be sorted according to test score (`score_test`).
Additional data provided, testing on additional data. Resulting leaderboard will be sorted according to test score (`score_test`).
Additional data provided, testing on additional data. Resulting leaderboard will be sorted according to test score (`score_test`).
Additional data provided, testing on additional data. Resulting leaderboard will be sorted according to test score (`score_test`).
Additional data provided, testing on additional data. Resulting leaderboard will be sorted according to test score (`score_test`).
Additional data provided, testing on additional data. Resulting leaderboard will be sorted according to test score (`score_test`).
Model not specified in predict, will default to the model with the best validation score: Chronos[amazon__chronos-bolt-base]
Model not specified in predict, will default to the model with the best validation score: Chronos[amazon__chronos-bolt-base]
Model not specified in predict, will default to the model with the best validation score: Chronos[amazon__chronos-bolt-base]
Model not specified in predict, will default to the model with the best validation score: Chronos[amazon__chronos-bolt-base]
Model not specified in predict, will default to the model with the best validation score: Chronos[amazon__chronos-bolt-base]
Model not specified in predict, will default to the model with the best validation score: Chronos[amazon__chronos-bolt-base]
Model not specified in predict, will default to the model with the best validation score: Chronos[amazon__chronos-bolt-base]
Model not specified in predict, will default to the model with the best validation score: Chronos[amazon__chronos-bolt-base]
Model not specified in predict, will default to the model with the best validation score: Chronos[amazon__chronos-bolt-base]
Model not specified in predict, will default to the model with the best validation score: Chronos[amazon__chronos-bolt-base]
Model not specified in predict, will default to the model with the best validation score: Chronos[amazon__chronos-bolt-base]
Model not specified in predict, will default to the model with the best validation score: Chronos[amazon__chronos-bolt-base]
Model not specified in predict, will default to the model with the best validation score: Chronos[amazon__chronos-bolt-base]
Model not specified in predict, will default to the model with the best validation score: Chronos[amazon__chronos-bolt-base]
Model not specified in predict, will default to the model with the best validation score: Chronos[amazon__chronos-bolt-base]
Model not specified in predict, will default to the model with the best validation score: Chronos[amazon__chronos-bolt-base]
Model not specified in predict, will default to the model with the best validation score: Chronos[amazon__chronos-bolt-base]
Model not specified in predict, will default to the model with the best validation score: Chronos[amazon__chronos-bolt-base]
Model not specified in predict, will default to the model with the best validation score: Chronos[amazon__chronos-bolt-base]
Model not specified in predict, will default to the model with the best validation score: Chronos[amazon__chronos-bolt-base]
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.73 GB / 63.10 GB (58.2%)
Disk Space Avail:   128.84 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.73 GB / 63.10 GB (58.2%)
Disk Space Avail:   128.84 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.73 GB / 63.10 GB (58.2%)
Disk Space Avail:   128.84 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.73 GB / 63.10 GB (58.2%)
Disk Space Avail:   128.84 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.73 GB / 63.10 GB (58.2%)
Disk Space Avail:   128.84 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.73 GB / 63.10 GB (58.2%)
Disk Space Avail:   128.84 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.73 GB / 63.10 GB (58.2%)
Disk Space Avail:   128.84 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.73 GB / 63.10 GB (58.2%)
Disk Space Avail:   128.84 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.73 GB / 63.10 GB (58.2%)
Disk Space Avail:   128.84 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.73 GB / 63.10 GB (58.2%)
Disk Space Avail:   128.84 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.73 GB / 63.10 GB (58.2%)
Disk Space Avail:   128.84 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.73 GB / 63.10 GB (58.2%)
Disk Space Avail:   128.84 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.73 GB / 63.10 GB (58.2%)
Disk Space Avail:   128.84 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.73 GB / 63.10 GB (58.2%)
Disk Space Avail:   128.84 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.73 GB / 63.10 GB (58.2%)
Disk Space Avail:   128.84 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.73 GB / 63.10 GB (58.2%)
Disk Space Avail:   128.84 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.73 GB / 63.10 GB (58.2%)
Disk Space Avail:   128.84 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.73 GB / 63.10 GB (58.2%)
Disk Space Avail:   128.84 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.73 GB / 63.10 GB (58.2%)
Disk Space Avail:   128.84 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.73 GB / 63.10 GB (58.2%)
Disk Space Avail:   128.84 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.73 GB / 63.10 GB (58.2%)
Disk Space Avail:   128.84 GB / 465.02 GB (27.7%)
===================================================
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================

Starting training. Start time is 2025-07-01 23:34:43

Starting training. Start time is 2025-07-01 23:34:43

Starting training. Start time is 2025-07-01 23:34:43

Starting training. Start time is 2025-07-01 23:34:43

Starting training. Start time is 2025-07-01 23:34:43

Starting training. Start time is 2025-07-01 23:34:43

Starting training. Start time is 2025-07-01 23:34:43

Starting training. Start time is 2025-07-01 23:34:43

Starting training. Start time is 2025-07-01 23:34:43

Starting training. Start time is 2025-07-01 23:34:43

Starting training. Start time is 2025-07-01 23:34:43

Starting training. Start time is 2025-07-01 23:34:43

Starting training. Start time is 2025-07-01 23:34:43

Starting training. Start time is 2025-07-01 23:34:43

Starting training. Start time is 2025-07-01 23:34:43

Starting training. Start time is 2025-07-01 23:34:43

Starting training. Start time is 2025-07-01 23:34:43

Starting training. Start time is 2025-07-01 23:34:43

Starting training. Start time is 2025-07-01 23:34:43

Starting training. Start time is 2025-07-01 23:34:43

Starting training. Start time is 2025-07-01 23:34:43
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	1.07    s     = Validation (prediction) runtime
	1.07    s     = Validation (prediction) runtime
	1.07    s     = Validation (prediction) runtime
	1.07    s     = Validation (prediction) runtime
	1.07    s     = Validation (prediction) runtime
	1.07    s     = Validation (prediction) runtime
	1.07    s     = Validation (prediction) runtime
	1.07    s     = Validation (prediction) runtime
	1.07    s     = Validation (prediction) runtime
	1.07    s     = Validation (prediction) runtime
	1.07    s     = Validation (prediction) runtime
	1.07    s     = Validation (prediction) runtime
	1.07    s     = Validation (prediction) runtime
	1.07    s     = Validation (prediction) runtime
	1.07    s     = Validation (prediction) runtime
	1.07    s     = Validation (prediction) runtime
	1.07    s     = Validation (prediction) runtime
	1.07    s     = Validation (prediction) runtime
	1.07    s     = Validation (prediction) runtime
	1.07    s     = Validation (prediction) runtime
	1.07    s     = Validation (prediction) runtime
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Total runtime: 1.10 s
Total runtime: 1.10 s
Total runtime: 1.10 s
Total runtime: 1.10 s
Total runtime: 1.10 s
Total runtime: 1.10 s
Total runtime: 1.10 s
Total runtime: 1.10 s
Total runtime: 1.10 s
Total runtime: 1.10 s
Total runtime: 1.10 s
Total runtime: 1.10 s
Total runtime: 1.10 s
Total runtime: 1.10 s
Total runtime: 1.10 s
Total runtime: 1.10 s
Total runtime: 1.10 s
Total runtime: 1.10 s
Total runtime: 1.10 s
Total runtime: 1.10 s
Total runtime: 1.10 s
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Model not specified in predict, will default to the model with the best validation score: Chronos[amazon__chronos-bolt-base]
Model not specified in predict, will default to the model with the best validation score: Chronos[amazon__chronos-bolt-base]
Model not specified in predict, will default to the model with the best validation score: Chronos[amazon__chronos-bolt-base]
Model not specified in predict, will default to the model with the best validation score: Chronos[amazon__chronos-bolt-base]
Model not specified in predict, will default to the model with the best validation score: Chronos[amazon__chronos-bolt-base]
Model not specified in predict, will default to the model with the best validation score: Chronos[amazon__chronos-bolt-base]
Model not specified in predict, will default to the model with the best validation score: Chronos[amazon__chronos-bolt-base]
Model not specified in predict, will default to the model with the best validation score: Chronos[amazon__chronos-bolt-base]
Model not specified in predict, will default to the model with the best validation score: Chronos[amazon__chronos-bolt-base]
Model not specified in predict, will default to the model with the best validation score: Chronos[amazon__chronos-bolt-base]
Model not specified in predict, will default to the model with the best validation score: Chronos[amazon__chronos-bolt-base]
Model not specified in predict, will default to the model with the best validation score: Chronos[amazon__chronos-bolt-base]
Model not specified in predict, will default to the model with the best validation score: Chronos[amazon__chronos-bolt-base]
Model not specified in predict, will default to the model with the best validation score: Chronos[amazon__chronos-bolt-base]
Model not specified in predict, will default to the model with the best validation score: Chronos[amazon__chronos-bolt-base]
Model not specified in predict, will default to the model with the best validation score: Chronos[amazon__chronos-bolt-base]
Model not specified in predict, will default to the model with the best validation score: Chronos[amazon__chronos-bolt-base]
Model not specified in predict, will default to the model with the best validation score: Chronos[amazon__chronos-bolt-base]
Model not specified in predict, will default to the model with the best validation score: Chronos[amazon__chronos-bolt-base]
Model not specified in predict, will default to the model with the best validation score: Chronos[amazon__chronos-bolt-base]
Model not specified in predict, will default to the model with the best validation score: Chronos[amazon__chronos-bolt-base]
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.62 GB / 63.10 GB (58.0%)
Disk Space Avail:   128.84 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.62 GB / 63.10 GB (58.0%)
Disk Space Avail:   128.84 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.62 GB / 63.10 GB (58.0%)
Disk Space Avail:   128.84 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.62 GB / 63.10 GB (58.0%)
Disk Space Avail:   128.84 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.62 GB / 63.10 GB (58.0%)
Disk Space Avail:   128.84 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.62 GB / 63.10 GB (58.0%)
Disk Space Avail:   128.84 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.62 GB / 63.10 GB (58.0%)
Disk Space Avail:   128.84 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.62 GB / 63.10 GB (58.0%)
Disk Space Avail:   128.84 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.62 GB / 63.10 GB (58.0%)
Disk Space Avail:   128.84 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.62 GB / 63.10 GB (58.0%)
Disk Space Avail:   128.84 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.62 GB / 63.10 GB (58.0%)
Disk Space Avail:   128.84 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.62 GB / 63.10 GB (58.0%)
Disk Space Avail:   128.84 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.62 GB / 63.10 GB (58.0%)
Disk Space Avail:   128.84 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.62 GB / 63.10 GB (58.0%)
Disk Space Avail:   128.84 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.62 GB / 63.10 GB (58.0%)
Disk Space Avail:   128.84 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.62 GB / 63.10 GB (58.0%)
Disk Space Avail:   128.84 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.62 GB / 63.10 GB (58.0%)
Disk Space Avail:   128.84 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.62 GB / 63.10 GB (58.0%)
Disk Space Avail:   128.84 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.62 GB / 63.10 GB (58.0%)
Disk Space Avail:   128.84 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.62 GB / 63.10 GB (58.0%)
Disk Space Avail:   128.84 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.62 GB / 63.10 GB (58.0%)
Disk Space Avail:   128.84 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.62 GB / 63.10 GB (58.0%)
Disk Space Avail:   128.84 GB / 465.02 GB (27.7%)
===================================================
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================

Starting training. Start time is 2025-07-01 23:36:33

Starting training. Start time is 2025-07-01 23:36:33

Starting training. Start time is 2025-07-01 23:36:33

Starting training. Start time is 2025-07-01 23:36:33

Starting training. Start time is 2025-07-01 23:36:33

Starting training. Start time is 2025-07-01 23:36:33

Starting training. Start time is 2025-07-01 23:36:33

Starting training. Start time is 2025-07-01 23:36:33

Starting training. Start time is 2025-07-01 23:36:33

Starting training. Start time is 2025-07-01 23:36:33

Starting training. Start time is 2025-07-01 23:36:33

Starting training. Start time is 2025-07-01 23:36:33

Starting training. Start time is 2025-07-01 23:36:33

Starting training. Start time is 2025-07-01 23:36:33

Starting training. Start time is 2025-07-01 23:36:33

Starting training. Start time is 2025-07-01 23:36:33

Starting training. Start time is 2025-07-01 23:36:33

Starting training. Start time is 2025-07-01 23:36:33

Starting training. Start time is 2025-07-01 23:36:33

Starting training. Start time is 2025-07-01 23:36:33

Starting training. Start time is 2025-07-01 23:36:33

Starting training. Start time is 2025-07-01 23:36:33
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	1.05    s     = Validation (prediction) runtime
	1.05    s     = Validation (prediction) runtime
	1.05    s     = Validation (prediction) runtime
	1.05    s     = Validation (prediction) runtime
	1.05    s     = Validation (prediction) runtime
	1.05    s     = Validation (prediction) runtime
	1.05    s     = Validation (prediction) runtime
	1.05    s     = Validation (prediction) runtime
	1.05    s     = Validation (prediction) runtime
	1.05    s     = Validation (prediction) runtime
	1.05    s     = Validation (prediction) runtime
	1.05    s     = Validation (prediction) runtime
	1.05    s     = Validation (prediction) runtime
	1.05    s     = Validation (prediction) runtime
	1.05    s     = Validation (prediction) runtime
	1.05    s     = Validation (prediction) runtime
	1.05    s     = Validation (prediction) runtime
	1.05    s     = Validation (prediction) runtime
	1.05    s     = Validation (prediction) runtime
	1.05    s     = Validation (prediction) runtime
	1.05    s     = Validation (prediction) runtime
	1.05    s     = Validation (prediction) runtime
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Total runtime: 1.08 s
Total runtime: 1.08 s
Total runtime: 1.08 s
Total runtime: 1.08 s
Total runtime: 1.08 s
Total runtime: 1.08 s
Total runtime: 1.08 s
Total runtime: 1.08 s
Total runtime: 1.08 s
Total runtime: 1.08 s
Total runtime: 1.08 s
Total runtime: 1.08 s
Total runtime: 1.08 s
Total runtime: 1.08 s
Total runtime: 1.08 s
Total runtime: 1.08 s
Total runtime: 1.08 s
Total runtime: 1.08 s
Total runtime: 1.08 s
Total runtime: 1.08 s
Total runtime: 1.08 s
Total runtime: 1.08 s
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Warning: path already exists! This predictor may overwrite an existing predictor! path="../models/chronos_finetuned_INTC_5M"
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Frequency '5T' stored as '5min'
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.85 GB / 63.10 GB (58.4%)
Disk Space Avail:   128.80 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.85 GB / 63.10 GB (58.4%)
Disk Space Avail:   128.80 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.85 GB / 63.10 GB (58.4%)
Disk Space Avail:   128.80 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.85 GB / 63.10 GB (58.4%)
Disk Space Avail:   128.80 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.85 GB / 63.10 GB (58.4%)
Disk Space Avail:   128.80 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.85 GB / 63.10 GB (58.4%)
Disk Space Avail:   128.80 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.85 GB / 63.10 GB (58.4%)
Disk Space Avail:   128.80 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.85 GB / 63.10 GB (58.4%)
Disk Space Avail:   128.80 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.85 GB / 63.10 GB (58.4%)
Disk Space Avail:   128.80 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.85 GB / 63.10 GB (58.4%)
Disk Space Avail:   128.80 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.85 GB / 63.10 GB (58.4%)
Disk Space Avail:   128.80 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.85 GB / 63.10 GB (58.4%)
Disk Space Avail:   128.80 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.85 GB / 63.10 GB (58.4%)
Disk Space Avail:   128.80 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.85 GB / 63.10 GB (58.4%)
Disk Space Avail:   128.80 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.85 GB / 63.10 GB (58.4%)
Disk Space Avail:   128.80 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.85 GB / 63.10 GB (58.4%)
Disk Space Avail:   128.80 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.85 GB / 63.10 GB (58.4%)
Disk Space Avail:   128.80 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.85 GB / 63.10 GB (58.4%)
Disk Space Avail:   128.80 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.85 GB / 63.10 GB (58.4%)
Disk Space Avail:   128.80 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.85 GB / 63.10 GB (58.4%)
Disk Space Avail:   128.80 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.85 GB / 63.10 GB (58.4%)
Disk Space Avail:   128.80 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.85 GB / 63.10 GB (58.4%)
Disk Space Avail:   128.80 GB / 465.02 GB (27.7%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       36.85 GB / 63.10 GB (58.4%)
Disk Space Avail:   128.80 GB / 465.02 GB (27.7%)
===================================================
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality
Setting presets to: medium_quality

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 
Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================

Starting training. Start time is 2025-07-02 08:15:57

Starting training. Start time is 2025-07-02 08:15:57

Starting training. Start time is 2025-07-02 08:15:57

Starting training. Start time is 2025-07-02 08:15:57

Starting training. Start time is 2025-07-02 08:15:57

Starting training. Start time is 2025-07-02 08:15:57

Starting training. Start time is 2025-07-02 08:15:57

Starting training. Start time is 2025-07-02 08:15:57

Starting training. Start time is 2025-07-02 08:15:57

Starting training. Start time is 2025-07-02 08:15:57

Starting training. Start time is 2025-07-02 08:15:57

Starting training. Start time is 2025-07-02 08:15:57

Starting training. Start time is 2025-07-02 08:15:57

Starting training. Start time is 2025-07-02 08:15:57

Starting training. Start time is 2025-07-02 08:15:57

Starting training. Start time is 2025-07-02 08:15:57

Starting training. Start time is 2025-07-02 08:15:57

Starting training. Start time is 2025-07-02 08:15:57

Starting training. Start time is 2025-07-02 08:15:57

Starting training. Start time is 2025-07-02 08:15:57

Starting training. Start time is 2025-07-02 08:15:57

Starting training. Start time is 2025-07-02 08:15:57

Starting training. Start time is 2025-07-02 08:15:57
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	-0.1141       = Validation score (-MASE)
	0.03    s     = Training runtime
	0.03    s     = Training runtime
	0.03    s     = Training runtime
	0.03    s     = Training runtime
	0.03    s     = Training runtime
	0.03    s     = Training runtime
	0.03    s     = Training runtime
	0.03    s     = Training runtime
	0.03    s     = Training runtime
	0.03    s     = Training runtime
	0.03    s     = Training runtime
	0.03    s     = Training runtime
	0.03    s     = Training runtime
	0.03    s     = Training runtime
	0.03    s     = Training runtime
	0.03    s     = Training runtime
	0.03    s     = Training runtime
	0.03    s     = Training runtime
	0.03    s     = Training runtime
	0.03    s     = Training runtime
	0.03    s     = Training runtime
	0.03    s     = Training runtime
	0.03    s     = Training runtime
	12.82   s     = Validation (prediction) runtime
	12.82   s     = Validation (prediction) runtime
	12.82   s     = Validation (prediction) runtime
	12.82   s     = Validation (prediction) runtime
	12.82   s     = Validation (prediction) runtime
	12.82   s     = Validation (prediction) runtime
	12.82   s     = Validation (prediction) runtime
	12.82   s     = Validation (prediction) runtime
	12.82   s     = Validation (prediction) runtime
	12.82   s     = Validation (prediction) runtime
	12.82   s     = Validation (prediction) runtime
	12.82   s     = Validation (prediction) runtime
	12.82   s     = Validation (prediction) runtime
	12.82   s     = Validation (prediction) runtime
	12.82   s     = Validation (prediction) runtime
	12.82   s     = Validation (prediction) runtime
	12.82   s     = Validation (prediction) runtime
	12.82   s     = Validation (prediction) runtime
	12.82   s     = Validation (prediction) runtime
	12.82   s     = Validation (prediction) runtime
	12.82   s     = Validation (prediction) runtime
	12.82   s     = Validation (prediction) runtime
	12.82   s     = Validation (prediction) runtime
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Total runtime: 12.86 s
Total runtime: 12.86 s
Total runtime: 12.86 s
Total runtime: 12.86 s
Total runtime: 12.86 s
Total runtime: 12.86 s
Total runtime: 12.86 s
Total runtime: 12.86 s
Total runtime: 12.86 s
Total runtime: 12.86 s
Total runtime: 12.86 s
Total runtime: 12.86 s
Total runtime: 12.86 s
Total runtime: 12.86 s
Total runtime: 12.86 s
Total runtime: 12.86 s
Total runtime: 12.86 s
Total runtime: 12.86 s
Total runtime: 12.86 s
Total runtime: 12.86 s
Total runtime: 12.86 s
Total runtime: 12.86 s
Total runtime: 12.86 s
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model: Chronos[amazon__chronos-bolt-base]
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Best model score: -0.1141
Frequency '5T' stored as '5min'
Beginning AutoGluon training... Time limit = 600s
AutoGluon will save models to 'c:\Users\micha\code\finance\diploma\models\chronos_finetuned_INTC_5M'
=================== System Info ===================
AutoGluon Version:  1.3.1
Python Version:     3.10.18
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          32
GPU Count:          0
Memory Avail:       33.03 GB / 63.10 GB (52.3%)
Disk Space Avail:   116.49 GB / 465.02 GB (25.1%)
===================================================
Setting presets to: medium_quality

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'freq': '5min',
 'hyperparameters': {'Chronos': {'model_path': 'amazon/chronos-bolt-base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

Provided train_data has 21934 rows (NaN fraction=55.3%), 1 time series. Median time series length is 21934 (min=21934, max=21934). 

Provided data contains following columns:
	target: 'target'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-07-20 16:29:40
Models that will be trained: ['Chronos[amazon__chronos-bolt-base]']
Training timeseries model Chronos[amazon__chronos-bolt-base]. Training for up to 600.0s of the 600.0s of remaining time.
	-0.1141       = Validation score (-MASE)
	5.71    s     = Training runtime
	3.02    s     = Validation (prediction) runtime
Not fitting ensemble as only 1 model was trained.
Training complete. Models trained: ['Chronos[amazon__chronos-bolt-base]']
Total runtime: 8.75 s
Best model: Chronos[amazon__chronos-bolt-base]
Best model score: -0.1141
